<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-05T13:10:23 BRT" name="Surefire suite" finished-at="2025-05-05T13:11:20 BRT" duration-ms="56822">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@bef2d72]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-05-05T13:10:23 BRT" name="Surefire test" finished-at="2025-05-05T13:11:20 BRT" duration-ms="56822">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@bef2d72]" started-at="2025-05-05T13:10:24 BRT" name="setUpClass" finished-at="2025-05-05T13:10:44 BRT" duration-ms="19556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@512d4583]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@bef2d72]" started-at="2025-05-05T13:10:44 BRT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-05-05T13:10:46 BRT" duration-ms="1967" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with correct username and password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["LoginFeature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.aventstack.extentreports.ExtentTest.createNode(String)" because "Base.BaseUtil.features" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.createNode(String)" because "Base.BaseUtil.features" is null
at steps.Hook.InitializeTest(Hook.java:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@bef2d72]" started-at="2025-05-05T13:10:46 BRT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-05-05T13:10:47 BRT" duration-ms="1364" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with incorrect credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["LoginFeature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.aventstack.extentreports.ExtentTest.createNode(String)" because "Base.BaseUtil.features" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.createNode(String)" because "Base.BaseUtil.features" is null
at steps.Hook.InitializeTest(Hook.java:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@bef2d72]" started-at="2025-05-05T13:10:47 BRT" name="tearDownClass" finished-at="2025-05-05T13:11:20 BRT" duration-ms="32895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
